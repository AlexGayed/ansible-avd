{# Leaf tenant vlan interfaces #}
{% for tenant in tenants | arista.avd.natural_sort if tenant in leaf.filter_tenants or "all" in leaf.filter_tenants %}
{%     if tenants[tenant].vrfs is defined %}
{%         for vrf in tenants[tenant].vrfs | arista.avd.natural_sort %}
{%             if loop.first %}
## {{ tenant }} ##
{%             endif %}
{%             for svi in tenants[tenant].vrfs[vrf].svis | arista.avd.natural_sort if svi in leaf.svis %}
{# Detect if a svi_profile exists #}
{# If exists, create a shortpath to access profile data #}
{%                 set profile = namespace() %}
{%                 set profile.exist = false %}
{%                 if svi_profiles is defined and svi_profiles is not none %}
{%                     if tenants[tenant].vrfs[vrf].svis[svi].profile is defined %}
{%                         if tenants[tenant].vrfs[vrf].svis[svi].profile in svi_profiles %}
{%                             set profile.exist = true %}
{%                             set profile.data = svi_profiles[tenants[tenant].vrfs[vrf].svis[svi].profile] %}
{%                         endif %}
{%                     endif %}
{%                 endif %}
{# Tenant VLAN interfaces #}
  Vlan{{ svi }}:
    tenant: {{ tenant }}
    tags: {{ tenants[tenant].vrfs[vrf].svis[svi].tags }}
    description: {{ tenants[tenant].vrfs[vrf].svis[svi].name }}
    vrf: {{ vrf }}
{# START KEYS dedicated to SVI (non-profile keys) #}
{%                 if tenants[tenant].vrfs[vrf].svis[svi].nodes is defined %}
{%                     for node in tenants[tenant].vrfs[vrf].svis[svi].nodes %}
{%                          if node == inventory_hostname %}
{%                              if tenants[tenant].vrfs[vrf].svis[svi].nodes[inventory_hostname].ip_address is defined %}
    ip_address: {{ tenants[tenant].vrfs[vrf].svis[svi].nodes[inventory_hostname].ip_address }}
{%                              endif %}
{%                          endif %}
{%                     endfor %}
{%                 endif %}
{%                 if tenants[tenant].vrfs[vrf].svis[svi].ip_virtual_router_address is defined %}
    ip_virtual_router_address: {{ tenants[tenant].vrfs[vrf].svis[svi].ip_virtual_router_address | ipaddr('address') }}
{%                 endif %}
{%                 if tenants[tenant].vrfs[vrf].svis[svi].ip_address_virtual is defined %}
    ip_address_virtual: {{ tenants[tenant].vrfs[vrf].svis[svi].ip_address_virtual }}
{%                 endif %}
{%                 if tenants[tenant].vrfs[vrf].svis[svi].ip_address_virtual_secondary is defined %}
    ip_address_virtual_secondary: {{ tenants[tenant].vrfs[vrf].svis[svi].ip_address_virtual_secondary }}
{%                 endif %}
{# START KEYS covered by PROFILE #}
{#                 block for PROFILE keys #}
{%                 if profile.exist == true %}
{%                     if svi_profiles[tenants[tenant].vrfs[vrf].svis[svi].profile].mtu is defined %}
    mtu: {{ svi_profiles[tenants[tenant].vrfs[vrf].svis[svi].profile].mtu }}
{%                     endif %}
{%                     if profile.data.enabled is defined %}
    enabled: {{ profile.data.enabled }}
{%                     endif %}
{#                 block for keys if profile does not exist #}
{%                 else %}
{%                     if tenants[tenant].vrfs[vrf].svis[svi].mtu is defined %}
    mtu: {{ tenants[tenant].vrfs[vrf].svis[svi].mtu }}
{%                     endif %}
{%                     if tenants[tenant].vrfs[vrf].svis[svi].enabled is defined %}
    enabled: {{ tenants[tenant].vrfs[vrf].svis[svi].enabled }}
{%                     else %}
    enabled: true
{%                     endif %}
{%                 endif %}
{%                 if tenants[tenant].vrfs[vrf].ip_helpers is defined and tenants[tenant].vrfs[vrf].ip_helpers is not none %}
    ip_helpers:
{%                     for helper_ip in tenants[tenant].vrfs[vrf].ip_helpers %}
      {{ helper_ip }}:
        source_interface: {{ tenants[tenant].vrfs[vrf].ip_helpers[helper_ip].source_interface }}
{%                          if tenants[tenant].vrfs[vrf].ip_helpers[helper_ip].source_vrf is defined and tenants[tenant].vrfs[vrf].ip_helpers[helper_ip].source_vrf is not none %}
        vrf: {{ tenants[tenant].vrfs[vrf].ip_helpers[helper_ip].source_vrf }}
{%                          else %}
        vrf: {{ vrf }}
{%                          endif %}
{%                     endfor %}
{%                 elif tenants[tenant].vrfs[vrf].svis[svi].ip_helpers is defined and tenants[tenant].vrfs[vrf].svis[svi].ip_helpers is not none %}
    ip_helpers:
{%                     for helper_ip in tenants[tenant].vrfs[vrf].svis[svi].ip_helpers %}
      {{ helper_ip }}:
        source_interface: {{ tenants[tenant].vrfs[vrf].svis[svi].ip_helpers[helper_ip].source_interface }}
        vrf: {{ vrf }}
{%                     endfor %}
{%                 endif %}
{# VLAN interface for iBGP peering in overlay VRFs #}
{%                 if loop.last and type == "l3leaf" and leaf.mlag == true %}
  Vlan{{ mlag_ibgp_peering_vrfs.base_vlan + (tenants[tenant].vrfs[vrf].vrf_vni - 1) }}:
    tenant: {{ tenant }}
    type: underlay_peering
    description: "MLAG_PEER_L3_iBGP: vrf {{ vrf }}"
    vrf: {{ vrf }}
    ip_address: {{ mlag_ips.leaf_peer_l3 | ipaddr('network') | ipmath(leaf.mlag_ip ) }}/31
{%                 endif %}
{%             endfor %}
{%         endfor %}
{%    endif %}
{% endfor %}
