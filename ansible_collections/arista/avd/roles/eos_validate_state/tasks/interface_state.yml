---

# Interface State Tests

- name: Gather interfaces state
  eos_command:
    commands: "show interfaces description | json"
  ignore_errors: "{{ validation_mode_loose }}"
  register: interfaces_state
  tags:
    - interfaces_state

- name: Validate Ethernet interfaces state
  assert:
    that:
      - interfaces_state.stdout[0].interfaceDescriptions[ethernet_interface.key].interfaceStatus == "up"
      - interfaces_state.stdout[0].interfaceDescriptions[ethernet_interface.key].lineProtocolStatus == "up"
    quiet: true
  loop: "{{ ethernet_interfaces | default({}) | dict2items }}"
  loop_control:
    loop_var: ethernet_interface
  ignore_errors: "{{ validation_mode_loose }}"
  register: ethernet_interface_state_results
  tags:
    - interfaces_state

- name: Validate Port-Channel interfaces state
  assert:
    that:
      - interfaces_state.stdout[0].interfaceDescriptions[port_channel_interface.key].interfaceStatus == "up"
      - interfaces_state.stdout[0].interfaceDescriptions[port_channel_interface.key].lineProtocolStatus == "up"
    quiet: true
  loop: "{{ port_channel_interfaces | default({}) | dict2items }}"
  loop_control:
    loop_var: port_channel_interface
  ignore_errors: "{{ validation_mode_loose }}"
  register: port_channel_interface_results
  tags:
    - interfaces_state

- name: Validate Vlan interfaces state
  assert:
    that:
      - interfaces_state.stdout[0].interfaceDescriptions[vlan_interface.key].interfaceStatus == "up"
      - interfaces_state.stdout[0].interfaceDescriptions[vlan_interface.key].lineProtocolStatus == "up"
    quiet: true
  loop: "{{ vlan_interfaces | default({}) | dict2items }}"
  loop_control:
    loop_var: vlan_interface
  ignore_errors: "{{ validation_mode_loose }}"
  when: (vlan_interfaces is defined and vlan_interfaces is not none)
  register: vlan_interface_state_results
  tags:
    - interfaces_state

- name: Validate Vxlan interfaces state
  assert:
    that:
      - interfaces_state.stdout[0].interfaceDescriptions["Vxlan1"].interfaceStatus == "up"
      - interfaces_state.stdout[0].interfaceDescriptions["Vxlan1"].lineProtocolStatus == "up"
    quiet: true
  ignore_errors: "{{ validation_mode_loose }}"
  when: (vxlan_tunnel_interface is defined and vxlan_tunnel_interface is not none)
  register: vxlan_interface_state_results
  tags:
    - interfaces_state

- name: Validate Loopback interfaces state
  assert:
    that:
      - interfaces_state.stdout[0].interfaceDescriptions[loopback_interface.key].interfaceStatus == "up"
      - interfaces_state.stdout[0].interfaceDescriptions[loopback_interface.key].lineProtocolStatus == "up"
    quiet: true
  loop: "{{ loopback_interfaces | default({}) | dict2items }}"
  loop_control:
    loop_var: loopback_interface
  ignore_errors: "{{ validation_mode_loose }}"
  when: (loopback_interfaces is defined and loopback_interfaces is not none)
  register: loopback_interface_state_results
  tags:
    - interfaces_state

