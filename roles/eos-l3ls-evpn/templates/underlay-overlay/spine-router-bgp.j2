{# Spine router bgp configuration #}
  as: {{ spine.bgp_as }}
  router_id: {{ overlay_loopback_network_summary | ipaddr('network') | ipmath(spine.nodes[inventory_hostname].id) }}
  bgp_defaults:
{% for bgp_default in spine_bgp_defaults %}
    - {{ bgp_default }}
{% endfor %}
    - maximum-paths {{ spine.nodes | length }} ecmp {{ spine.nodes | length }}
  peer_groups:
    IPv4-UNDERLAY-PEERS:
      type: ipv4
      peer_filter: LEAF-AS-RANGE
      password: "{{ bgp_peer_groups.IPv4_UNDERLAY_PEERS.password }}"
      maximum_routes: 12000
    EVPN-OVERLAY-PEERS:
      type: evpn
      peer_filter: LEAF-AS-RANGE
      next_hop_unchanged: true
      update_source: Loopback0
      fall_over_bfd: true
      ebgp_multihop: 3
      password: "{{ bgp_peer_groups.EVPN_OVERLAY_PEERS.password }}"
      send_community: true
      maximum_routes: 0
  neighbors:
{% for l3leaf_node_group in l3leafs.node_groups | natural_sort %}
{%     for node in l3leafs.node_groups[l3leaf_node_group].nodes | natural_sort %}
    {{ underlay_p2p_network_summary | ipaddr('network') | ipmath(((l3leafs.node_groups[l3leaf_node_group].nodes[node].id -1 ) * spine.nodes | length * 2) + (spine.nodes[inventory_hostname].id * 2) - 1) }}:
      peer_group: IPv4-UNDERLAY-PEERS
{%         if l3leafs.node_groups[l3leaf_node_group].bgp_as is defined %}
      remote_as: {{ l3leafs.node_groups[l3leaf_node_group].bgp_as }}
{%         else %}
      remote_as: {{ l3leafs.defaults.bgp_as }}
{%         endif %}
    {{ overlay_loopback_network_summary | ipaddr('network') | ipmath(l3leafs.node_groups[l3leaf_node_group].nodes[node].id + spine.nodes | length ) }}:
      peer_group: EVPN-OVERLAY-PEERS
{%         if l3leafs.node_groups[l3leaf_node_group].bgp_as is defined %}
      remote_as: {{ l3leafs.node_groups[l3leaf_node_group].bgp_as }}
{%         else %}
      remote_as: {{ l3leafs.defaults.bgp_as }}
{%         endif %}
{%     endfor %}
{% endfor %}
  redistribute_routes:
    connected:
      route_map: RM-CONN-2-BGP